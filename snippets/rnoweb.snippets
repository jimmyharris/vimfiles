# Preprocessor Commands
snippet req
	require(${1}, quitely=${2:TRUE})
snippet lib
	library(${1})
snippet src
	source('${1}')
snippet script
	source('script/${1:filename}')
# Control Sequences
snippet fn
	${1:my.function} <- function(${1:args}) {
	  ${2:# code}
	}
snippet fun
	function(${1}) {
	  ${2:# code}
	}
snippet if
	if (${1}) {
	  ${2:# do this}
	}
snippet ife
	if (${1}) {
	  ${2:# do this}
	} else {
	  ${3:# do that}
	}
snippet eli
	else if ($1) {
	  ${2:# do this}
	}
snippet for
	for ( ${1:i} %in% ${2:seq} ) {
	  ${3:# do stuff}
	} 
# Foreach package
snippet femc
	foreach( ${1:iterators}, ${2:.combine=${3:rbind} ) %dopar% {
	  ${4:# do stuff in parallel}
	}
snippet mcopts	
	.options.multicore=list( ${1:preschedule=FALSE} )
snippet comb
	.combine=${1:rbind}
snippet fe
	foreach( ${1:iterators} ) ${2}
snippet :
	%:% ${1}
snippet do
	%do% {
	  ${1:# do stuff}
	}
snippet dop
	%dopar% {
	  ${1:# do stuff}
	}
# TestThat Package
snippet con 
	context('${1}')
snippet tt
	test_that("${1}",{
	  ${2:p <- before() # Preconditions}
	  ${3:# Expectations}
	})
snippet exp
	expect_that(${1:expression}, ${2:expectation})
snippet expt
	expect_true(${1:expression})
snippet expf
	expect_false(${1:expression})
snippet expeq
	expect_equal(${1:expression}, ${2:value})
snippet expid
	expect_identical(${1:expression}, ${2:object})
snippet expa
	expect_is(${1:expression}, ${2:a_class})
snippet experr
	expect_error(${1:expression}, ${2:'regexp'})
snippet expp
	expect_output(${1:expression}, ${2:'regexp'})
snippet expm
	expect_match(${1:expression}, ${2:'regexp'})
snippet expmsg
	expect_message(${1:expression}, ${2:'regexp'})
snippet expw
	expect_warning(${1:expression}, ${2:'regexp'})
snippet exptlt
	expect_that( ${1:expression}, takes_less_than( ${2:seconds} ) )
# TeX snippets.
# \begin{}...\end{}
snippet begin
	\begin{${1:env}}
		${2}
	\end{$1}
# Tabular
snippet tab
	\begin{${1:tabular}}{${2:c}}
	${3}
	\end{$1}
# Align(ed)
snippet ali
	\begin{align${1:ed}}
		${2}
	\end{align$1}
# Gather(ed)
snippet gat
	\begin{gather${1:ed}}
		${2}
	\end{gather$1}
# Equation
snippet eq
	\begin{equation}
		${1}
	\end{equation}
# Unnumbered Equation
snippet \
	\\[
		${1}
	\\]
# Enumerate
snippet enum
	\begin{enumerate}
		\item ${1}
	\end{enumerate}
# Itemize
snippet item
	\begin{itemize}
		\item ${1}
	\end{itemize}
# Description
snippet desc
	\begin{description}
		\item[${1}] ${2}
	\end{description}
# Matrix
snippet mat
	\begin{${1:p/b/v/V/B/small}matrix}
		${2}
	\end{$1matrix}
# Cases
snippet cas
	\begin{cases}
		${1:equation}, &\text{ if }${2:case}\\
		${3}
	\end{cases}
# Split
snippet spl
	\begin{split}
		${1}
	\end{split}
# Part
snippet part
	\part{${1:part name}} % (fold)
	\label{prt:${2:$1}}
	${3}
	% part $2 (end)
# Chapter
snippet cha
	\chapter{${1:chapter name}} % (fold)
	\label{cha:${2:$1}}
	${3}
	% chapter $2 (end)
# Section
snippet sec
	\section{${1:section name}} % (fold)
	\label{sec:${2:$1}}
	${3}
	% section $2 (end)
# Sub Section
snippet sub
	\subsection{${1:subsection name}} % (fold)
	\label{sub:${2:$1}}
	${3}
	% subsection $2 (end)
# Sub Sub Section
snippet subs
	\subsubsection{${1:subsubsection name}} % (fold)
	\label{ssub:${2:$1}}
	${3}
	% subsubsection $2 (end)
# Paragraph
snippet par
	\paragraph{${1:paragraph name}} % (fold)
	\label{par:${2:$1}}
	${3}
	% paragraph $2 (end)
# Sub Paragraph
snippet subp
	\subparagraph{${1:subparagraph name}} % (fold)
	\label{subp:${2:$1}}
	${3}
	% subparagraph $2 (end)
snippet cap
	\caption{${1:Caption Goes Here!}}
snippet itd
	\item[${1:description}] ${2:item}
# References
snippet figure
	${1:Figure}~\ref{${2:fig:}}${3}
snippet table
	${1:Table}~\ref{${2:tab:}}${3}
snippet listing
	${1:Listing}~\ref{${2:list}}${3}
snippet section
	${1:Section}~\ref{${2:sec:}}${3}
snippet page
	${1:page}~\pageref{${2}}${3}
